Wed 27/Dec/2017 15:29:19: ('',)
Wed 27/Dec/2017 15:29:19: ('-------------------------------------------------------------------------------------',)
Wed 27/Dec/2017 15:29:19: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Wed 27/Dec/2017 15:29:19: ("  [Namespace(alpha=0.5, enro_mode='enro_far_1214', enro_path='../../data/xytx_far_1214/enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='4', load=-1, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=6044, save_path='../../data/far-am-speech-novad', test_mode='test_far_1214', test_path='../../data/xytx_far_1214/test')]",)
Wed 27/Dec/2017 15:29:19: ('',)
Thu 28/Dec/2017 16:05:23: ('',)
Thu 28/Dec/2017 16:05:23: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 16:05:23: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 16:05:23: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xytx_far_1214_volumeup', dims=512, enro_mode='enro_xytx_far_1214_volumeup', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='4', load=12, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xytx_far_1214_volumeup', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 16:05:23: ('',)
Thu 28/Dec/2017 16:05:23: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.12.model]',)
Thu 28/Dec/2017 16:05:35: ('',)
Thu 28/Dec/2017 16:05:35: ('\n=================================================================',)
Thu 28/Dec/2017 16:05:35: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 16:05:35: ('=================================================================\n',)
Thu 28/Dec/2017 16:05:35: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 16:05:36: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 16:05:36: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 16:05:36: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 16:05:36: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 16:05:36: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 16:05:36: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 16:05:36: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 16:05:36: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 16:05:36: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 16:05:36: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 16:05:36: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 16:05:36: ('\n=================================================================\n',)
Thu 28/Dec/2017 16:12:20: ('',)
Thu 28/Dec/2017 16:12:20: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 16:12:20: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 16:12:20: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xytx_far_1214_volumeup', dims=512, enro_mode='enro_xytx_far_1214_volumeup', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='4', load=12, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xytx_far_1214_volumeup', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 16:12:20: ('',)
Thu 28/Dec/2017 16:12:20: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.12.model]',)
Thu 28/Dec/2017 16:12:38: ('',)
Thu 28/Dec/2017 16:12:38: ('\n=================================================================',)
Thu 28/Dec/2017 16:12:38: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 16:12:38: ('=================================================================\n',)
Thu 28/Dec/2017 16:12:38: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 16:12:39: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 16:12:39: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 16:12:39: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 16:12:39: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 16:12:39: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 16:12:39: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 16:12:39: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 16:12:39: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 16:12:39: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 16:12:40: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 16:12:40: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 16:12:40: ('\n=================================================================\n',)
Thu 28/Dec/2017 16:13:23: ('',)
Thu 28/Dec/2017 16:14:01: ('EER: 0.083461  AUC: 0.971510',)
Thu 28/Dec/2017 16:14:01: ('positive: 2005  negative: 200500  sum(label): 2005',)
Thu 28/Dec/2017 16:14:01: ("thresholds: <type 'numpy.ndarray'>  shape:(12309,)",)
Thu 28/Dec/2017 16:14:01: (array([ 0.98683929,  0.94884259,  0.94883639, ...,  0.54978323,
        0.54972303,  0.46105725], dtype=float32),)
Thu 28/Dec/2017 16:14:01: ('min score: 0.461057  max score: 0.986839  mean_score: 0.756063',)
Thu 28/Dec/2017 16:14:01: ('',)
Thu 28/Dec/2017 16:14:01: ('',)
Thu 28/Dec/2017 16:14:01: ('[Done]',)
Thu 28/Dec/2017 16:14:34: ('',)
Thu 28/Dec/2017 16:14:34: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 16:14:34: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 16:14:34: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xytx_far_1214_volumeup', dims=512, enro_mode='enro_xytx_far_1214_volumeup', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='4', load=11, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xytx_far_1214_volumeup', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 16:14:34: ('',)
Thu 28/Dec/2017 16:14:34: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.11.model]',)
Thu 28/Dec/2017 16:14:46: ('',)
Thu 28/Dec/2017 16:14:46: ('\n=================================================================',)
Thu 28/Dec/2017 16:14:46: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 16:14:46: ('=================================================================\n',)
Thu 28/Dec/2017 16:14:46: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 16:14:47: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 16:14:47: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 16:14:47: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 16:14:47: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 16:14:47: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 16:14:47: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 16:14:47: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 16:14:47: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 16:14:47: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 16:14:48: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 16:14:48: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 16:14:48: ('\n=================================================================\n',)
Thu 28/Dec/2017 16:15:31: ('',)
Thu 28/Dec/2017 16:16:02: ('EER: 0.085561  AUC: 0.969746',)
Thu 28/Dec/2017 16:16:02: ('positive: 2005  negative: 200500  sum(label): 2005',)
Thu 28/Dec/2017 16:16:02: ("thresholds: <type 'numpy.ndarray'>  shape:(11967,)",)
Thu 28/Dec/2017 16:16:02: (array([ 0.98583281,  0.95157671,  0.95157576, ...,  0.55792749,
        0.5579263 ,  0.47057021], dtype=float32),)
Thu 28/Dec/2017 16:16:02: ('min score: 0.470570  max score: 0.985833  mean_score: 0.759630',)
Thu 28/Dec/2017 16:16:02: ('',)
Thu 28/Dec/2017 16:16:02: ('',)
Thu 28/Dec/2017 16:16:02: ('[Done]',)
Thu 28/Dec/2017 16:16:17: ('',)
Thu 28/Dec/2017 16:16:17: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 16:16:17: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 16:16:17: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xytx_far_1214_volumeup', dims=512, enro_mode='enro_xytx_far_1214_volumeup', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='4', load=10, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xytx_far_1214_volumeup', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 16:16:17: ('',)
Thu 28/Dec/2017 16:16:17: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.10.model]',)
Thu 28/Dec/2017 16:16:29: ('',)
Thu 28/Dec/2017 16:16:29: ('\n=================================================================',)
Thu 28/Dec/2017 16:16:29: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 16:16:29: ('=================================================================\n',)
Thu 28/Dec/2017 16:16:29: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 16:16:30: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 16:16:30: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 16:16:30: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 16:16:30: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 16:16:30: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 16:16:30: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 16:16:30: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 16:16:30: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 16:16:30: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 16:16:30: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 16:16:30: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 16:16:30: ('\n=================================================================\n',)
Thu 28/Dec/2017 16:17:13: ('',)
Thu 28/Dec/2017 16:17:48: ('EER: 0.080284  AUC: 0.972274',)
Thu 28/Dec/2017 16:17:48: ('positive: 2005  negative: 200500  sum(label): 2005',)
Thu 28/Dec/2017 16:17:48: ("thresholds: <type 'numpy.ndarray'>  shape:(12128,)",)
Thu 28/Dec/2017 16:17:48: (array([ 0.98552084,  0.95461655,  0.95446551, ...,  0.54085958,
        0.5408535 ,  0.46866289], dtype=float32),)
Thu 28/Dec/2017 16:17:48: ('min score: 0.468663  max score: 0.985521  mean_score: 0.751941',)
Thu 28/Dec/2017 16:17:48: ('',)
Thu 28/Dec/2017 16:17:48: ('',)
Thu 28/Dec/2017 16:17:48: ('[Done]',)
Thu 28/Dec/2017 17:11:30: ('',)
Thu 28/Dec/2017 17:11:30: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 17:11:30: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 17:11:30: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xytx_far_1214_volumeup', dims=512, enro_mode='enro_xytx_far_1214_volumeup', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='4', load=12, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xytx_far_1214_volumeup', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 17:11:30: ('',)
Thu 28/Dec/2017 17:11:30: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.12.model]',)
Thu 28/Dec/2017 17:11:42: ('',)
Thu 28/Dec/2017 17:11:43: ('\n=================================================================',)
Thu 28/Dec/2017 17:11:43: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 17:11:43: ('=================================================================\n',)
Thu 28/Dec/2017 17:11:43: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 17:11:43: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 17:11:43: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 17:11:43: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 17:11:43: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 17:11:43: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 17:11:43: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 17:11:43: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 17:11:43: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 17:11:43: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 17:11:44: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 17:11:44: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 17:11:44: ('\n=================================================================\n',)
Thu 28/Dec/2017 17:12:15: ('',)
Thu 28/Dec/2017 17:12:47: ('EER: 0.083461  AUC: 0.971510',)
Thu 28/Dec/2017 17:12:47: ('positive: 2005  negative: 200500  sum(label): 2005',)
Thu 28/Dec/2017 17:12:47: ("thresholds: <type 'numpy.ndarray'>  shape:(12309,)",)
Thu 28/Dec/2017 17:12:47: (array([ 0.98683929,  0.94884259,  0.94883639, ...,  0.54978323,
        0.54972303,  0.46105725], dtype=float32),)
Thu 28/Dec/2017 17:12:47: ('min score: 0.461057  max score: 0.986839  mean_score: 0.756063',)
Thu 28/Dec/2017 17:12:47: ('',)
Thu 28/Dec/2017 17:12:47: ('',)
Thu 28/Dec/2017 17:12:47: ('[Done]',)
Thu 28/Dec/2017 17:14:57: ('',)
Thu 28/Dec/2017 17:14:57: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 17:14:57: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 17:14:57: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xytx_far_1214_volumeup', dims=512, enro_mode='enro_xytx_far_1214_volumeup', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='4', load=11, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xytx_far_1214_volumeup', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 17:14:57: ('',)
Thu 28/Dec/2017 17:14:57: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.11.model]',)
Thu 28/Dec/2017 17:15:09: ('',)
Thu 28/Dec/2017 17:15:09: ('\n=================================================================',)
Thu 28/Dec/2017 17:15:09: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 17:15:09: ('=================================================================\n',)
Thu 28/Dec/2017 17:15:09: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 17:15:10: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 17:15:10: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 17:15:10: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 17:15:10: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 17:15:10: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 17:15:10: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 17:15:10: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 17:15:10: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 17:15:10: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 17:15:10: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 17:15:10: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 17:15:10: ('\n=================================================================\n',)
Thu 28/Dec/2017 17:15:39: ('',)
Thu 28/Dec/2017 17:16:12: ('EER: 0.085561  AUC: 0.969746',)
Thu 28/Dec/2017 17:16:12: ('positive: 2005  negative: 200500  sum(label): 2005',)
Thu 28/Dec/2017 17:16:12: ("thresholds: <type 'numpy.ndarray'>  shape:(11967,)",)
Thu 28/Dec/2017 17:16:12: (array([ 0.98583281,  0.95157671,  0.95157576, ...,  0.55792749,
        0.5579263 ,  0.47057021], dtype=float32),)
Thu 28/Dec/2017 17:16:12: ('min score: 0.470570  max score: 0.985833  mean_score: 0.759630',)
Thu 28/Dec/2017 17:16:12: ('',)
Thu 28/Dec/2017 17:16:12: ('',)
Thu 28/Dec/2017 17:16:12: ('[Done]',)
Thu 28/Dec/2017 17:16:23: ('',)
Thu 28/Dec/2017 17:16:23: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 17:16:23: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 17:16:23: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xytx_far_1214_volumeup', dims=512, enro_mode='enro_xytx_far_1214_volumeup', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='4', load=10, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xytx_far_1214_volumeup', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 17:16:23: ('',)
Thu 28/Dec/2017 17:16:23: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.10.model]',)
Thu 28/Dec/2017 17:16:34: ('',)
Thu 28/Dec/2017 17:16:34: ('\n=================================================================',)
Thu 28/Dec/2017 17:16:34: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 17:16:34: ('=================================================================\n',)
Thu 28/Dec/2017 17:16:34: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 17:16:35: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 17:16:35: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 17:16:35: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 17:16:35: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 17:16:35: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 17:16:35: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 17:16:35: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 17:16:35: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 17:16:35: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 17:16:35: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 17:16:35: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 17:16:35: ('\n=================================================================\n',)
Thu 28/Dec/2017 17:17:04: ('',)
Thu 28/Dec/2017 17:17:41: ('EER: 0.080284  AUC: 0.972274',)
Thu 28/Dec/2017 17:17:41: ('positive: 2005  negative: 200500  sum(label): 2005',)
Thu 28/Dec/2017 17:17:41: ("thresholds: <type 'numpy.ndarray'>  shape:(12128,)",)
Thu 28/Dec/2017 17:17:41: (array([ 0.98552084,  0.95461655,  0.95446551, ...,  0.54085958,
        0.5408535 ,  0.46866289], dtype=float32),)
Thu 28/Dec/2017 17:17:41: ('min score: 0.468663  max score: 0.985521  mean_score: 0.751941',)
Thu 28/Dec/2017 17:17:41: ('',)
Thu 28/Dec/2017 17:17:42: ('',)
Thu 28/Dec/2017 17:17:42: ('[Done]',)
Thu 28/Dec/2017 18:05:00: ('',)
Thu 28/Dec/2017 18:05:00: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 18:05:00: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 18:05:00: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xiaoyutongxue', dims=512, enro_mode='enro_xiaoyutongxue', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='0', load=12, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xiaoyutongxue', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 18:05:00: ('',)
Thu 28/Dec/2017 18:05:00: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.12.model]',)
Thu 28/Dec/2017 18:05:18: ('',)
Thu 28/Dec/2017 18:05:18: ('\n=================================================================',)
Thu 28/Dec/2017 18:05:18: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 18:05:18: ('=================================================================\n',)
Thu 28/Dec/2017 18:05:18: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 18:05:21: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 18:05:21: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 18:05:21: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 18:05:21: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 18:05:21: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 18:05:21: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 18:05:21: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 18:05:21: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 18:05:21: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 18:05:22: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 18:05:22: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 18:05:22: ('\n=================================================================\n',)
Thu 28/Dec/2017 18:06:30: ('',)
Thu 28/Dec/2017 18:08:02: ('EER: 0.015812  AUC: 0.998747',)
Thu 28/Dec/2017 18:08:02: ('positive: 4754  negative: 475412  sum(label): 4754',)
Thu 28/Dec/2017 18:08:02: ("thresholds: <type 'numpy.ndarray'>  shape:(55932,)",)
Thu 28/Dec/2017 18:08:02: (array([ 0.99055088,  0.94396317,  0.94396114, ...,  0.44922763,
        0.44922405,  0.38005716], dtype=float32),)
Thu 28/Dec/2017 18:08:02: ('min score: 0.380057  max score: 0.990551  mean_score: 0.607152',)
Thu 28/Dec/2017 18:08:02: ('',)
Thu 28/Dec/2017 18:08:02: ('',)
Thu 28/Dec/2017 18:08:02: ('[Done]',)
Thu 28/Dec/2017 18:09:28: ('',)
Thu 28/Dec/2017 18:09:28: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 18:09:28: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 18:09:28: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xiaoyutongxue', dims=512, enro_mode='enro_xiaoyutongxue', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='0', load=11, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xiaoyutongxue', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 18:09:28: ('',)
Thu 28/Dec/2017 18:09:28: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.11.model]',)
Thu 28/Dec/2017 18:09:41: ('',)
Thu 28/Dec/2017 18:09:41: ('\n=================================================================',)
Thu 28/Dec/2017 18:09:41: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 18:09:41: ('=================================================================\n',)
Thu 28/Dec/2017 18:09:41: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 18:09:42: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 18:09:42: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 18:09:42: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 18:09:42: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 18:09:42: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 18:09:42: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 18:09:42: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 18:09:42: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 18:09:42: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 18:09:43: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 18:09:43: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 18:09:43: ('\n=================================================================\n',)
Thu 28/Dec/2017 18:10:46: ('',)
Thu 28/Dec/2017 18:12:21: ('EER: 0.015715  AUC: 0.998697',)
Thu 28/Dec/2017 18:12:21: ('positive: 4754  negative: 475412  sum(label): 4754',)
Thu 28/Dec/2017 18:12:21: ("thresholds: <type 'numpy.ndarray'>  shape:(56332,)",)
Thu 28/Dec/2017 18:12:21: (array([ 0.99068654,  0.95245308,  0.95244122, ...,  0.44574511,
        0.44574341,  0.38551319], dtype=float32),)
Thu 28/Dec/2017 18:12:21: ('min score: 0.385513  max score: 0.990687  mean_score: 0.603124',)
Thu 28/Dec/2017 18:12:21: ('',)
Thu 28/Dec/2017 18:12:21: ('',)
Thu 28/Dec/2017 18:12:21: ('[Done]',)
Thu 28/Dec/2017 18:13:11: ('',)
Thu 28/Dec/2017 18:13:11: ('-------------------------------------------------------------------------------------',)
Thu 28/Dec/2017 18:13:11: ('  [log save in test-resnet34-far-am-speech-novad.log]',)
Thu 28/Dec/2017 18:13:11: ("  [Namespace(alpha=0.5, base_path='/aifs1/users/kxd/sre/data/test/xiaoyutongxue', dims=512, enro_mode='enro_xiaoyutongxue', enro_path='enro', fea_path='../../logfbank', fea_type='far-am-speech-novad', gpu='0', load=10, model='resnet34', model_file='epoch.{:d}.model', model_path='/home/lj/work/voice/model', num_classes=8470, save_path='../../data/far-am-speech-novad', test_mode='test_xiaoyutongxue', test_path='test', trials='test/trials', use_feat='speech', use_vad=False)]",)
Thu 28/Dec/2017 18:13:11: ('',)
Thu 28/Dec/2017 18:13:11: ('  [Reload model from: /home/lj/work/voice/model/resnet34far-am-speech-novad/epoch.10.model]',)
Thu 28/Dec/2017 18:13:24: ('',)
Thu 28/Dec/2017 18:13:24: ('\n=================================================================',)
Thu 28/Dec/2017 18:13:24: ('    [ ResNet 34 Model ]',)
Thu 28/Dec/2017 18:13:24: ('=================================================================\n',)
Thu 28/Dec/2017 18:13:24: ('input x: ', torch.Size([5, 1, 40, 40]))
Thu 28/Dec/2017 18:13:25: ('conv1 x: ', torch.Size([5, 64, 20, 20]))
Thu 28/Dec/2017 18:13:25: ('maxpl x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 18:13:25: ('layer1 x: ', torch.Size([5, 64, 10, 10]))
Thu 28/Dec/2017 18:13:25: ('layer2 x: ', torch.Size([5, 128, 5, 5]))
Thu 28/Dec/2017 18:13:25: ('layer3 x: ', torch.Size([5, 256, 3, 3]))
Thu 28/Dec/2017 18:13:25: ('layer4 x: ', torch.Size([5, 512, 2, 2]))
Thu 28/Dec/2017 18:13:25: ('avgpl x: ', torch.Size([5, 512, 1, 1]))
Thu 28/Dec/2017 18:13:25: ('xview x: ', torch.Size([5, 512]))
Thu 28/Dec/2017 18:13:25: ('yview y: ', torch.Size([5, 512]))
Thu 28/Dec/2017 18:13:26: ('fc x: ', torch.Size([5, 8470]))
Thu 28/Dec/2017 18:13:26: ('return y(feature), x(predict)',)
Thu 28/Dec/2017 18:13:26: ('\n=================================================================\n',)
Thu 28/Dec/2017 18:14:30: ('',)
Thu 28/Dec/2017 18:16:10: ('EER: 0.016138  AUC: 0.998667',)
Thu 28/Dec/2017 18:16:10: ('positive: 4754  negative: 475412  sum(label): 4754',)
Thu 28/Dec/2017 18:16:10: ("thresholds: <type 'numpy.ndarray'>  shape:(55257,)",)
Thu 28/Dec/2017 18:16:10: (array([ 0.99116302,  0.96153331,  0.9615041 , ...,  0.41670099,
        0.41669023,  0.37758949], dtype=float32),)
Thu 28/Dec/2017 18:16:10: ('min score: 0.377589  max score: 0.991163  mean_score: 0.601644',)
Thu 28/Dec/2017 18:16:10: ('',)
Thu 28/Dec/2017 18:16:10: ('',)
Thu 28/Dec/2017 18:16:10: ('[Done]',)
